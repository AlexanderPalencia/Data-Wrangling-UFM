knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
unlink('README_cache', recursive = TRUE)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
files <- list.files(path = "./Data", full.names=TRUE)
read <- function(excel_file)
{
excel <- read_excel(excel_file, range = cell_cols("A:H"))
fecha <- substr(excel_file, 8, 14)
excel$Fecha <- fecha
return(excel)
}
data <- lapply(files,read)
df <- do.call("rbind",data)
write.csv(df, "MyData.csv",row.names=FALSE)
library(tidyverse)
files <- list.files(path = "./Data", full.names=TRUE)
read <- function(excel_file)
{
excel <- read_excel(excel_file, range = cell_cols("A:H"))
fecha <- substr(excel_file, 8, 14)
excel$Fecha <- fecha
return(excel)
}
data <- lapply(files,read)
library(tidyverse)
files <- list.files(path = "./Data", full.names=TRUE)
read <- function(excel_file)
{
excel <- read_excel(excel_file, range = cell_cols("A:H"))
fecha <- substr(excel_file, 8, 14)
excel$Fecha <- fecha
return(excel)
}
data <- lapply(files,read)
library(tidyverse)
library(readxl)
files <- list.files(path = "./Data", full.names=TRUE)
read <- function(excel_file)
{
excel <- read_excel(excel_file, range = cell_cols("A:H"))
fecha <- substr(excel_file, 8, 14)
excel$Fecha <- fecha
return(excel)
}
data <- lapply(files,read)
df <- do.call("rbind",data)
write.csv(df, "MyData.csv",row.names=FALSE)
library(tidyverse)
library(readxl)
files <- list.files(path = "./Data", full.names=TRUE)
read <- function(excel_file)
{
excel <- read_excel(excel_file, range = cell_cols("A:H"))
fecha <- substr(excel_file, 8, 14)
excel$Fecha <- fecha
return(excel)
}
data <- lapply(files,read)
df <- do.call("rbind",data)
write.csv(df, "MyData.csv",row.names=FALSE)
head(df)
calculate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
v1 <- c(2,1,2,3,1,2,3,4,1,5,5,3,2,3)
v2<- c(5,2,5,9,9,7,5,6,1,3,9,7,4,9)
v3 <- c(4,5,3,6,6,3,3,1,2,5,7,5,8,7)
list_vector <- list(v1,v2,v3)
lapply(list_vector, calculate_mode)
knitr::opts_chunk$set(echo = TRUE)
data <- read.delim("./Data1/INE_PARQUE_VEHICULAR_080219.txt", header=TRUE, sep="|")
head(data)
install.packages("flexdashboard")
getwd()
setwd("D:/Documents/Data Product/")
getwd()
unlink('layout_flex_cache', recursive = TRUE)
cls
clear
pokemons_fire <-
pokemons %>%
filter(type1 == 'fire') %>%
select(name, japanese_name, generation, is_legendary)
pokemons_fire <-
pokemon %>%
filter(type1 == 'fire') %>%
select(name, japanese_name, generation, is_legendary) %>%
DT::datatable()
devtools::install_github("rstudio/crosstalk")
install.packages("crosstalk")
install.packages("leaflet")
cls
clear
clean
library(flexdashboard)
library(readr)
library(dplyr)
library(DT)
pokemon <- read.csv("pokemon.csv")
valueBox(nrow(pokemon),
caption = "total de pokemonns",
icon = 'fa-paw')
valueBox(sum(pokemon$is_legendary),
caption = "total de legendarios",
icon = 'fa-crown')
valueBox(round(mean(pokemon$height_m, na.rm = TRUE),2),
caption = "promedio altura",
icon = 'fa-text-height', color = "warning")
DT::datatable(pokemon)
pokemons_fire <-
pokemon %>%
filter(type1 == 'fire') %>%
select(name, japanese_name, generation, is_legendary)
DT::datatable(pokemons_fire)
attack_metrics <-
pokemon %>%
group_by(type1) %>%
summarise(avg_attack = mean(sp_attack.na.rm = TRUE)) %>%
mutate(avg_attack = round(avg_attack,0))
---
title: "FLEX DASHBOARDS HTML WIDGETS"
output:
flexdashboard::flex_dashboard:
orientation: rows
vertical_layout: fill
---
dfs
getwd()
setwd("D:\Documents\Data-Product\flexdashboards")
setwd("D:/Documents/Data-Product/flexdashboards")
library(flexdashboard)
library(readr)
library(dplyr)
library(leaflet)
library(crosstalk)
library(DT)
earthqueakedata <- read_csv("earthquakedata.csv")
earthqueakedata <- read_csv("earthquakedata.csv")
earthqueakedata %>%
filter(yr = 1995) %>%
DT::datatable()
earthquakedata %>%
filter(yr == 1995) %>%
DT::datatable()
earthquakedata <- read_csv("earthquakedata.csv")
earthquakedata %>%
filter(yr == 1995) %>%
DT::datatable()
earthquakedata %>%
filter(yr == 1995) %>%
leaflet() %>%
addTiles() %>%
addMarkers(lng = ~lon,
lat = ~lat,
label = ~yr)
